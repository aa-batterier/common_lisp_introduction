; Function MERGE-LISTS merges two list together so that the numbers are in order.
; The list must be in increasing order.
(defun merge-lists (l1 l2)
  (cond ((null l1) l2)
	((null l2) l1)
	((> (first l1) (first l2)) (cons (first l2) (merge-lists l1 (rest l2))))
	(t (cons (first l1) (merge-lists (rest l1) l2)))))

#|
* (merge-lists '(1 2 6 8 10 12) '(2 3 5 9 13))
  0: (MERGE-LISTS (1 2 6 8 10 12) (2 3 5 9 13))
    1: (MERGE-LISTS (2 6 8 10 12) (2 3 5 9 13))
      2: (MERGE-LISTS (6 8 10 12) (2 3 5 9 13))
        3: (MERGE-LISTS (6 8 10 12) (3 5 9 13))
          4: (MERGE-LISTS (6 8 10 12) (5 9 13))
            5: (MERGE-LISTS (6 8 10 12) (9 13))
              6: (MERGE-LISTS (8 10 12) (9 13))
                7: (MERGE-LISTS (10 12) (9 13))
                  8: (MERGE-LISTS (10 12) (13))
                    9: (MERGE-LISTS (12) (13))
                      10: (MERGE-LISTS NIL (13))
                      10: MERGE-LISTS returned (13)
                    9: MERGE-LISTS returned (12 13)
                  8: MERGE-LISTS returned (10 12 13)
                7: MERGE-LISTS returned (9 10 12 13)
              6: MERGE-LISTS returned (8 9 10 12 13)
            5: MERGE-LISTS returned (6 8 9 10 12 13)
          4: MERGE-LISTS returned (5 6 8 9 10 12 13)
        3: MERGE-LISTS returned (3 5 6 8 9 10 12 13)
      2: MERGE-LISTS returned (2 3 5 6 8 9 10 12 13)
    1: MERGE-LISTS returned (2 2 3 5 6 8 9 10 12 13)
  0: MERGE-LISTS returned (1 2 2 3 5 6 8 9 10 12 13)
(1 2 2 3 5 6 8 9 10 12 13)
|#
